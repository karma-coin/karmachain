name: Rust

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set-Up
        run: sudo apt install -y git clang curl libssl-dev llvm libudev-dev protobuf-compiler
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          target: wasm32-unknown-unknown
      - uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set-Up
        run: sudo apt install -y git clang curl libssl-dev llvm libudev-dev protobuf-compiler
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt
          target: wasm32-unknown-unknown
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set-Up
        run: sudo apt install -y git clang curl libssl-dev llvm libudev-dev protobuf-compiler
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: clippy
          target: wasm32-unknown-unknown
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings

  build: 
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set-Up
        run: sudo apt install -y git clang curl libssl-dev llvm libudev-dev protobuf-compiler
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          target: wasm32-unknown-unknown
      - uses: actions-rs/cargo@v1
        with:
          command: check

  benchmarking: 
    name: Benchmarking
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set-Up
        run: sudo apt install -y git clang curl libssl-dev llvm libudev-dev protobuf-compiler
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          target: wasm32-unknown-unknown
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --features=runtime-benchmarks
